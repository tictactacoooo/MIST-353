@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hiking Search</title>
    <link rel="stylesheet" href="indexstyles.css">
</head>
<body>
    <div id="geolocationDisplay" style="padding: 10px; border: 1px solid #ccc; margin-bottom: 20px;">
        <h3>Current Geolocation:</h3>
        <p id="geolocationInfo">Loading...</p>
    </div>

    <form id="locationForm">
        <!-- Use a div to contain the label and input -->
        <div id="locationContainer">
            <!-- Initially, the label is inside the input box -->
            <input type="text" id="LocationID" name="location" placeholder="Where do you want to hike?" />
            <!-- Hidden label with an ID -->
            <label for="LocationID" id="locationLabel">Where do you want to hike?</label>
        </div>
        <button type="submit">Search</button>
    </form>

    <form id="nearMeForm">
        <label>Hikes near me</label>
        <button id="nearMeButton" type="button">Find Hikes Near Me</button>
    </form>

    <script>
        // Function to display current geolocation
        function displayGeolocation(position) {
            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;
            document.getElementById('geolocationInfo').innerHTML = 'Latitude: ' + latitude + '<br>Longitude: ' + longitude;
        }

        // Function to handle errors in geolocation
        function displayGeolocationError(error) {
            document.getElementById('geolocationInfo').innerHTML = 'Error getting geolocation: ' + error.message;
        }

        // Get current geolocation when the page loads
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(displayGeolocation, displayGeolocationError);
        } else {
            document.getElementById('geolocationInfo').innerHTML = 'Geolocation is not supported by this browser.';
        }

        // Get the input and label elements
        var locationInput = document.getElementById('LocationID');
        var locationLabel = document.getElementById('locationLabel');

        // When the input box is clicked, hide the label
        locationInput.addEventListener('click', function () {
            locationLabel.style.display = 'none';
        });

        // When the input box is blurred (loses focus) and is empty, show the label again
        locationInput.addEventListener('blur', function () {
            if (locationInput.value === '') {
                locationLabel.style.display = 'block';
            }
        });
    </script>
</body>
</html>
